{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\letic\\\\OneDrive\\\\Documents\\\\VS-Codes\\\\PatientAppointmentSystem\\\\frontend\\\\src\\\\components\\\\AppointmentTable.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AppointmentTable({\n  data,\n  loading\n}) {\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading\\u2026\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 23\n  }, this);\n  if (!(data !== null && data !== void 0 && data.length)) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No appointments yet.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 29\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tableWrap\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Patient Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Reason\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(a => {\n          var _a$patientName;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_a$patientName = a.patientName) !== null && _a$patientName !== void 0 ? _a$patientName : a.patient_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: a.date ? new Date(a.date).toISOString().slice(0, 10) : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: a.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: a.reason\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this)]\n          }, a.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = AppointmentTable;\nvar _c;\n$RefreshReg$(_c, \"AppointmentTable\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","AppointmentTable","data","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","a","_a$patientName","patientName","patient_name","date","Date","toISOString","slice","time","reason","id","_c","$RefreshReg$"],"sources":["C:/Users/letic/OneDrive/Documents/VS-Codes/PatientAppointmentSystem/frontend/src/components/AppointmentTable.js"],"sourcesContent":["import React from 'react';\r\n\r\nexport default function AppointmentTable({ data, loading }) {\r\n  if (loading) return <div>Loadingâ€¦</div>;\r\n  if (!data?.length) return <div>No appointments yet.</div>;\r\n\r\n  return (\r\n    <div className=\"tableWrap\">\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Patient Name</th>\r\n            <th>Date</th>\r\n            <th>Time</th>\r\n            <th>Reason</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((a) => (\r\n            <tr key={a.id}>\r\n              <td>{a.patientName ?? a.patient_name}</td>\r\n              <td>{a.date ? new Date(a.date).toISOString().slice(0, 10) : ''}</td>\r\n              <td>{a.time}</td>\r\n              <td>{a.reason}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}